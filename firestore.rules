/**
 * @fileoverview Firestore Security Rules for SnakeWolf website.
 *
 * Core Philosophy:
 * This ruleset allows public read access to all data (news articles, work items, creator items)
 * while restricting write access to prevent unauthorized modifications. Write access is effectively disabled
 * in this version, though placeholders exist for future authorization logic.
 *
 * Data Structure:
 * The database consists of three top-level collections:
 * - /news_articles: Stores news article data.
 * - /work_items: Stores portfolio work item data.
 * - /creator_items: Stores creator information.
 *
 * Key Security Decisions:
 * - Public Read Access:  All documents are publicly readable.
 * - Write Access Disabled: Write operations are currently denied.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants public read access to news articles, but restricts all write access.
     * @path /news_articles/{newsArticleId}
     * @allow (get, list): Any user can read news articles.
     * @deny (create, update, delete): No user can create, update, or delete news articles.
     * @principle Public read, no write access
     */
    match /news_articles/{newsArticleId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants public read access to work items, but restricts all write access.
     * @path /work_items/{workItemId}
     * @allow (get, list): Any user can read work items.
     * @deny (create, update, delete): No user can create, update, or delete work items.
     * @principle Public read, no write access
     */
    match /work_items/{workItemId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants public read access to creator items, but restricts all write access.
     * @path /creator_items/{creatorItemId}
     * @allow (get, list): Any user can read creator items.
     * @deny (create, update, delete): No user can create, update, or delete creator items.
     * @principle Public read, no write access
     */
    match /creator_items/{creatorItemId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }
  }
}