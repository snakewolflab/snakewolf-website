/**
 * @fileoverview Firestore Security Rules for the SnakeWolf website.
 *
 * Core Philosophy:
 * This ruleset prioritizes public read access for all data, enabling open consumption of news articles, work items, and creator information.
 * Write access is completely disallowed until an authentication mechanism is decided upon.
 *
 * Data Structure:
 * The database consists of three top-level collections: `news_articles`, `work_items`, and `creator_items`.
 *
 * Key Security Decisions:
 * - All collections are publicly readable.
 * - Write access is explicitly denied for all operations due to the lack of an authentication mechanism and defined roles/ownership.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows public read access to news articles. Write access is denied.
     * @path /news_articles/{newsArticleId}
     * @allow (get, list): Any user can read a news article.
     * @deny (create, update, delete): No user can create, update, or delete a news article.
     * @principle Public read, no write access.
     */
    match /news_articles/{newsArticleId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to work items. Write access is denied.
     * @path /work_items/{workItemId}
     * @allow (get, list): Any user can read a work item.
     * @deny (create, update, delete): No user can create, update, or delete a work item.
     * @principle Public read, no write access.
     */
    match /work_items/{workItemId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to creator items. Write access is denied.
     * @path /creator_items/{creatorItemId}
     * @allow (get, list): Any user can read a creator item.
     * @deny (create, update, delete): No user can create, update, or delete a creator item.
     * @principle Public read, no write access.
     */
    match /creator_items/{creatorItemId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }
  }
}