/**
 * @fileoverview Firestore Security Rules for SnakeWolf website.
 *
 * Core Philosophy:
 * This ruleset allows public read access to news articles, tags, media items, creators, and work items.
 * Contact form submissions require authentication to create.
 *
 * Data Structure:
 * The database contains several top-level collections:
 * - /news_articles/{newsArticleId}: Stores news articles.
 * - /tags/{tagId}: Stores tags for news articles.
 * - /contact_form_submissions/{contactFormSubmissionId}: Stores contact form submissions.
 * - /media_items/{mediaItemId}: Stores media items.
 * - /creators/{creatorId}: Stores creators.
 * - /works/{workId}: Stores work items (apps and games).
 *
 * Key Security Decisions:
 * - Public read access is granted to news articles, tags, media items, creators, and work items.
 * - Contact form submissions require user authentication.
 * - No listing restrictions are present as all collections are readable.
 * - No data ownership model is enforced.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read news articles, but no one to modify them.
     * @path /news_articles/{newsArticleId}
     * @allow (get, list)
     * @deny (create, update, delete)
     * @principle Allows public read access, with no modification.
     */
    match /news_articles/{newsArticleId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read tags, but no one to modify them.
     * @path /tags/{tagId}
     * @allow (get, list)
     * @deny (create, update, delete)
     * @principle Allows public read access, with no modification.
     */
    match /tags/{tagId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows authenticated users to create contact form submissions, but no one to read, modify, or delete.
     * @path /contact_form_submissions/{contactFormSubmissionId}
     * @allow (create)
     * @deny (get, list, update, delete)
     * @principle Requires authentication to submit contact form.
     */
    match /contact_form_submissions/{contactFormSubmissionId} {
      allow create: if isSignedIn();
      allow get, list, update, delete: if false;
    }

    /**
     * @description Allows anyone to read media items, but no one to modify them.
     * @path /media_items/{mediaItemId}
     * @allow (get, list)
     * @deny (create, update, delete)
     * @principle Allows public read access, with no modification.
     */
    match /media_items/{mediaItemId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read creators, but no one to modify them.
     * @path /creators/{creatorId}
     * @allow (get, list)
     * @deny (create, update, delete)
     * @principle Allows public read access, with no modification.
     */
    match /creators/{creatorId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to read works, but no one to modify them.
     * @path /works/{workId}
     * @allow (get, list)
     * @deny (create, update, delete)
     * @principle Allows public read access, with no modification.
     */
    match /works/{workId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    // Helper function to determine if a user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }
  }
}