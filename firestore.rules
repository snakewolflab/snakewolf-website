rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    /**
     * @description Grants public read access to news articles and denies all write operations.
     * @path /news_articles/{newsArticleId}
     * @allow (get, list) User can read any news article.
     * @deny (create, update, delete) Users cannot create, update, or delete news articles.
     * @principle Allows public read access.
     */
    match /news_articles/{newsArticleId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants public read access to tags and denies all write operations.
     * @path /tags/{tagId}
     * @allow (get, list) User can read any tag.
     * @deny (create, update, delete) Users cannot create, update, or delete tags.
     * @principle Allows public read access.
     */
    match /tags/{tagId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows authenticated users to create contact form submissions, but denies all other access.
     * @path /contact_form_submissions/{contactFormSubmissionId}
     * @allow (create) User can create a contact form submission if signed in.
     * @deny (get, list, update, delete) Users cannot read, list, update, or delete contact form submissions.
     * @principle Requires authentication for writes.
     */
    match /contact_form_submissions/{contactFormSubmissionId} {
      allow create: if isSignedIn();
      allow get, list, update, delete: if false;
    }

    /**
     * @description Grants public read access to media items and denies all write operations.
     * @path /media_items/{mediaItemId}
     * @allow (get, list) User can read any media item.
     * @deny (create, update, delete) Users cannot create, update, or delete media items.
     * @principle Allows public read access.
     */
    match /media_items/{mediaItemId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants public read access to creators and denies all write operations.
     * @path /creators/{creatorId}
     * @allow (get, list) User can read any creator.
     * @deny (create, update, delete) Users cannot create, update, or delete creators.
     * @principle Allows public read access.
     */
    match /creators/{creatorId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants public read access to works and denies all write operations.
     * @path /works/{workId}
     * @allow (get, list) User can read any work.
     * @deny (create, update, delete) Users cannot create, update, or delete works.
     * @principle Allows public read access.
     */
    match /works/{workId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}